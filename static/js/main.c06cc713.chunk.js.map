{"version":3,"sources":["components/navbar/Navbar.tsx","components/blog/index.tsx","components/loader/loader.tsx","hooks/useFetch.tsx","pages/Home.tsx","pages/Create.tsx","pages/details.tsx","pages/404NotFound.tsx","App.tsx","index.tsx"],"names":["Navbar","className","to","style","color","backgroundColor","borderRadius","BlogList","blogs","title","map","blog","id","author","toString","Loader","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","console","log","json","catch","e","name","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","preventDefault","bId","parseInt","Math","random","method","headers","JSON","stringify","go","type","required","value","onChange","target","disabled","background","BlogDetails","useParams","numID","onClick","push","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c06cc713.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\"\n\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <h1>The Penguin Blog</h1>\n      <div className=\"links\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/create\" style={{ \n          color: 'white', \n          backgroundColor: '#35c8f1',\n          borderRadius: '8px' \n        }}>New Blog</Link>\n      </div>\n    </nav>\n  );\n}\n \nexport default Navbar;","import { Link } from \"react-router-dom\"\nimport {Blog} from \"./blog\"\n\n\ntype Blogs = {\n\n    blogs: Blog[];\n    title?: string;\n\n}\n\n\n\nconst BlogList = ({ blogs, title } : Blogs) => {\n    return (\n        <div className = \"blog-list\">\n\n            <h2>{title}</h2>\n            {blogs.map((blog: Blog) => {\n      \n                return (<div className=\"blog-preview\" key={blog.id.toString()}>\n                    <Link to = {`/blogs/${blog.id}`}>\n                    <h2>{blog.title}</h2>\n                    <p>Written by {blog.author}</p>\n          \n                    </Link>\n                </div>\n    \n                )\n            })}\n            \n        </div>)\n}\nexport default BlogList;","const Loader = () => {\n  return <div>Loader</div>;\n};\n\nexport default Loader;\n","import {useEffect, useState} from \"react\"\nimport {Blog} from \"../components/blog/blog\"\n\n\nconst useFetch = ({ url }: any) => {\n    \n\n  //Blog-List\n  const [data, setData] = useState<Blog[]>([]);\n\n  // Loader Boolean\n  const [isPending, setIsPending] = useState<boolean>(true);\n\n\n\n  //Error Message\n  const [error, setError] = useState<string | null>(null);\n\n\n    useEffect(() => {\n      const abortCont : AbortController = new AbortController();\n\n\n      setTimeout(() => {\n          \n          fetch(\"http://localhost:8000/blogs\", {signal: abortCont.signal}).then((res : Response) => {\n         \n            if (!res.ok) {\n              \n    throw Error(\"could not fetch data for that result\")\n    \n            }console.log(res)\n\n\n            return res.json();\n          \n            \n            \n          }).then((data : Blog[]) => {\n      \n            setData(data);\n            setIsPending(false);\n            setError(null);\n      \n          }).catch((e: Error) => {\n\n            if (e.name === \"AbortError\") {\n              console.log(\"fetch aborted\");\n\n            }\n            else {\n              setIsPending(false)\n              setError(e.message)\n            }\n          }\n          \n          )\n      \n    \n        }, 1000)\n      return () => { abortCont.abort(); }\n      }, [url])\n    \n    return {data , isPending, error}\n    \n    \n}\n\nexport default useFetch","\nimport BlogList from \"../components/blog/index\";\nimport Loader from \"../components/loader/loader\"\nimport useFetch from \"../hooks/useFetch\"\n\n\nconst Home = () => {\n\n  const url: string = \"http://localhost:8000/blogs\";\n  const { data : blogs, isPending, error } = useFetch(url);\n\n  return (\n    <div className=\"home\">\n      \n      {error && <div>Error Message: { error}</div>}\n      { !blogs && isPending ? <Loader /> :<BlogList blogs={blogs} title=\"My Article\" />}\n    </div>\n  );\n}\n \nexport default Home;\n","// Web Form to create a new blog post\n\nimport { useState } from \"react\";\nimport { Blog } from \"../components/blog/blog\";\nimport { useHistory } from \"react-router-dom\"\n\n\n\nconst Create = () => {\n\n    const [title, setTitle] = useState<string>(\"\")\n    const [body, setBody] = useState<string>(\"\")\n    const [author, setAuthor] = useState<string>(\"Moin11.dev\")\n    const [isPending, setIsPending] = useState<boolean>(false);\n    const history = useHistory();\n\n\n\n\n    const addBlog = (e: any): void => {\n    \n        e.preventDefault();\n\n        const bId : number = parseInt((Math.random()*100 % 10 + 2).toString());\n        const blog: Blog = { title : title, body: body, author: author, id: bId };\n     \n        setIsPending(true);\n\n\n\n        fetch(\"http://localhost:8000/blogs\", {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' }\n         ,body: JSON.stringify(blog)  \n        })\n        \n        setIsPending(false);\n        history.go(-1);\n}\n\n\n    return (\n        \n        <div className=\"create\">\n            <h2>Add a New Blog</h2>\n            <form onSubmit = {addBlog}>\n                <label>Blog Title: </label>\n                <input type=\"text\" required value={title} onChange={(e : any) => {\n                    \n                    setTitle(e.target.value);\n\n\n\n                }}/>\n\n                \n                <label>Blog Body: </label>\n                <textarea required value = {body} onChange={(e : any) => {\n                    \n                    setBody(e.target.value);\n\n\n\n                }}></textarea>\n                <select value = {author} onChange={(e : any) => {\n                    \n                    setAuthor(e.target.value);\n\n\n\n                }}>\n                    <option value=\"Moin11.dev\">Moin11.dev</option>\n                    <option value=\"Jeff Cavaliere From Athleanx.com\">Jeff Cavaliere From Athleanx.com</option>\n                    <option value=\"NetNinja\">NetNinja</option>\n                    \n                </select>\n                {isPending === true ? <button disabled style = {{background: \"green\"}}>Adding Blog</button> : <button>Add Blog</button>}\n\n                <p>{author}</p>\n\n            </form>\n        </div>\n    );\n\n}\n\n\nexport default Create","import {useParams, useHistory} from \"react-router-dom\"\nimport useFetch from \"../hooks/useFetch\";\n\nconst BlogDetails = () => {\n    interface RouteParams { id: string }\n\n    \n    const { id } = useParams <RouteParams>();\n    const numID = parseInt(id);\n    const { data : blog, error, isPending } = useFetch(\"http://localhost:8000/blogs/\" + id);\n    const history = useHistory();\n   \n    console.log(blog[numID]);\n  \n    const handleDelete = (): void => {\n      \n        fetch(\"http://localhost:8000/blogs/\" + id, {\n    \n            method: 'DELETE'\n            \n            \n        }).then(() => {\n    \n            history.push('/');\n\n})\n\n  }\n  \n    return (\n        \n        \n        \n        <div className=\"blog-details\">\n      \n    { isPending && <div>Loading...</div> }\n      { error && <div>{ error }</div> }\n        {  (\n            <article>\n                \n                <h2>{blog[numID]?.title}</h2>\n                <p>Written by {blog[numID]?.author}</p>\n                <div>{blog[numID]?.body}</div>\n                <button onClick={handleDelete}>delete</button>\n            </article>)\n        }\n</div>)\n\n}\n\nexport default BlogDetails","import { Link } from \"react-router-dom\"\n\nconst NotFound = () => {\n  return (\n    <div className=\"not-found\">\n      <h2>Sorry</h2>\n      <p>404:status Page Not Found</p>\n      <Link to=\"/\">Back to the homepage...</Link>\n    </div>\n  );\n}\n\nexport default NotFound;","import Navbar from './components/navbar/Navbar';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\n\n// pages\nimport Home from './pages/Home';\nimport Create from './pages/Create';\nimport BlogDetails from './pages/details';\nimport NotFound from './pages/404NotFound';\n\n\n\n\nconst  App = () => {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Navbar />\n        <div className=\"content\">\n          <Switch>\n\n            <Route exact path=\"/\">\n            <Home />\n            </Route>\n\n            <Route path=\"/create\">\n            <Create />\n            </Route>\n\n            <Route path=\"/blogs/:id\">\n            <BlogDetails />\n            </Route>\n\n\n            <Route path=\"*\">\n            <NotFound />\n            </Route>\n\n          </Switch>\n       \n      </div>\n      </div>\n      </Router>  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}